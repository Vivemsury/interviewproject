<!DOCTYPE html>
<html>

<head>
    <title>Text Writer with Tabs, Formatting, and Attachments</title>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .tabs {
            display: flex;
            margin: 20px auto;
        }

        .tab {
            padding: 10px 20px;
            cursor: pointer;
            background-color: #f2f2f2;
            border: 1px solid #ccc;
        }

        .tab:hover {
            background-color: #e0e0e0;
        }

        .tab.active {
            background-color: #007BFF;
            color: #fff;
        }

        #editor-container {
            width: 80%;
            margin: 20px auto;
            border: 1px solid #ccc;
        }

        #attachment-input {
            display: none;
        }

        #attachment-label {
            display: block;
            margin: 10px 0;
            cursor: pointer;
            text-decoration: underline;
        }

        /* Styles for attachment options */
        #attachment-options {
            display: none;
            position: absolute;
            background-color: #fff;
            border: 1px solid #ccc;
            z-index: 1;
        }

        .attachment-option {
            padding: 10px;
            cursor: pointer;
            border-bottom: 1px solid #ccc;
        }

        .attachment-option:last-child {
            border-bottom: none;
        }
    </style>
</head>

<body>
    <div>
        <h1>Text Writer with Tabs, Formatting, and Attachments</h1>
    </div>
    <div class="tabs">
        <div class="tab active" id="reply-tab">Reply</div>
        <div class="tab" id="notes-tab">Notes</div>
    </div>
    <div id="editor-container">
        <div id="editor"></div>
        <label id="attachment-label" for="attachment-input">Attach Files</label>
        <input type="file" id="attachment-input" multiple>
        <!-- Attachment options menu -->
        <div id="attachment-options">
            <div class="attachment-option" data-type="photos">Photos</div>
            <div class="attachment-option" data-type="videos">Videos</div>
            <div class="attachment-option" data-type="documents">Documents</div>
            <div class="attachment-option" data-type="contact">Contact</div>
            <div class="attachment-option" data-type="poll">Poll</div>
            <div class="attachment-option" data-type="drawing">Drawing</div>
        </div>
    </div>
    <div>
        <button id="save-button">Save Text</button>
    </div>

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
        const replyTab = document.getElementById("reply-tab");
        const notesTab = document.getElementById("notes-tab");
        const editor = new Quill('#editor', {
            theme: 'snow',
            modules: {
                toolbar: [
                    ['bold', 'italic', 'underline', 'strike'],
                    [{ 'code-block': 'code' }]
                ]
            }
        });

        replyTab.addEventListener("click", () => {
            replyTab.classList.add("active");
            notesTab.classList.remove("active");
            editor.clipboard.dangerouslyPasteHTML(0, editor.root.innerHTML);
        });

        notesTab.addEventListener("click", () => {
            notesTab.classList.add("active");
            replyTab.classList.remove("active");
            editor.clipboard.dangerouslyPasteHTML(0, editor.root.innerHTML);
        });

        replyTab.click();

        const saveButton = document.getElementById("save-button");
        const attachmentInput = document.getElementById("attachment-input");
        const attachmentLabel = document.getElementById("attachment-label");
        const attachmentOptions = document.getElementById("attachment-options");

        attachmentLabel.addEventListener("click", () => {
            attachmentOptions.style.display = "block";
        });

        // Handle attachment option selection
        const attachmentOptionElements = attachmentOptions.querySelectorAll(".attachment-option");
        attachmentOptionElements.forEach((option) => {
            option.addEventListener("click", (e) => {
                const selectedOption = e.currentTarget.getAttribute("data-type");
                attachmentOptions.style.display = "none";

                // You can perform specific actions based on the selected attachment type
                // For example, you can display a file picker for each type or implement custom logic.
                switch (selectedOption) {
                    case "photos":
                        // Handle the "Photos" option

                        // Assuming you have an HTML element with the id "photo-preview" to display selected photos
                        const photoPreview = document.getElementById("photo-preview");

                        // Clear the previous photo previews
                        photoPreview.innerHTML = '';

                        for (let i = 0; i < files.length; i++) {
                            const file = files[i];

                            // Check if the file is an image (you may want to improve the validation)
                            if (file.type.startsWith("image/")) {
                                const img = document.createElement("img");
                                img.src = URL.createObjectURL(file);
                                img.style.maxWidth = "100px"; // Set a maximum width for the preview
                                img.style.maxHeight = "100px"; // Set a maximum height for the preview
                                photoPreview.appendChild(img);
                            }
                        }

                        break;
                    case "videos":
                        // Handle the "Videos" option
                        break;
                    case "documents":
                        // Handle the "Documents" option
                        break;
                    case "contact":
                        // Handle the "Contact" option

                        // Assuming you have an HTML element with the id "contact-preview" to display selected contacts
                        const contactPreview = document.getElementById("contact-preview");

                        // Clear the previous contact previews
                        contactPreview.innerHTML = '';

                        // Create a text input field to enter contact information
                        const contactInput = document.createElement("input");
                        contactInput.type = "text";
                        contactInput.placeholder = "Enter contact information";
                        contactPreview.appendChild(contactInput);

                        // Add a button to save and display the contact information
                        const saveButton = document.createElement("button");
                        saveButton.textContent = "Save Contact";
                        saveButton.addEventListener("click", () => {
                            const contactInfo = contactInput.value;
                            if (contactInfo) {
                                const contactText = document.createElement("div");
                                contactText.textContent = contactInfo;
                                contactPreview.appendChild(contactText);
                            }
                        });
                        contactPreview.appendChild(saveButton);

                        break;

                    case "poll":
                        // Handle the "Poll" option
                        break;
                    case "drawing":
                        // Handle the "Drawing" option
                        break;
                }
            });
        });

        attachmentInput.addEventListener("change", (e) => {
            const files = attachmentInput.files;
            // You can handle the selected files here, e.g., upload them to a server or process them as needed.
        });

        saveButton.addEventListener("click", function () {
            const text = editor.root.innerHTML;
            console.log("Text saved: ", text);
        });
    </script>
</body>

</html>
